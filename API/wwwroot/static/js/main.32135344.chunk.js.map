{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/utils/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setActivity","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","getActivity","setPredicate","value","resetPredicate","forEach","setLoadingInitial","state","setPagination","setPagingParams","loadActivities","axiosParams","result","console","log","loadActivity","runInAction","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCanceled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","URLSearchParams","toString","toISOString","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","setImage","setDisplayName","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","e","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","Statistic","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.32135344.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCanceled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n  \n  \n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.description;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n  \n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n  \n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import axios, {AxiosError, AxiosResponse} from \"axios\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport {toast} from \"react-toastify\";\nimport {history} from \"../../index\";\nimport {store} from \"../stores/store\";\nimport {User, UserFormValues} from \"../models/user\";\nimport {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {PaginatedResult} from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n})\n\naxios.interceptors.response.use(async (response) => {\n  if (process.env.NODE_ENV === 'development') await sleep(1000);\n  \n  const pagination = response.headers['pagination'];\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>;\n  }\n  return response;\n}, (error: AxiosError) => {\n  const {data, status, config, headers} = error.response!;\n  switch (status) {\n    case 400:\n      if (typeof data === 'string') {\n        toast.error(data);\n      }\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n        history.push('/not-found');\n      }\n      if (data.errors) {\n        const modalStateErrors = [];\n        for (const key in data.errors) {\n          if (data.errors[key]) {\n            modalStateErrors.push(data.errors[key]);\n          }\n        }\n        throw modalStateErrors.flat();\n      }\n      break;\n    case 401:\n      if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\n        store.userStore.logout();\n        toast.error('Session expired - please login again');\n      }\n      break;\n    case 404:\n      history.push('/not-found')\n      break;\n    case 500:\n      store.commonStore.setServerError(data);\n      history.push('/server-error');\n      break;\n  }\n  return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params})\n    .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n  current: () => requests.get<User>('/account'),\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n  fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n  refreshToken: () => requests.post<User>('account/refreshToken', {}),\n  verifyEmail: (token: string, email: string) =>\n    requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\n  resendEmailConfirm: (email: string) =>\n    requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\n}\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: {'Content-type': 'multipart/form-data'}\n    })\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => requests.put('/profiles', profile),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) => \n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) => \n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n}\n\nexport default agent;","import {User} from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}","import {makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport {format} from \"date-fns\";\nimport {store} from \"./store\";\nimport {Profile} from \"../models/profile\";\nimport {Pagination, PagingParams} from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n  \n  constructor() {\n    makeAutoObservable(this)\n    \n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n  \n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) => {\n      return a.date!.getTime() - b.date!.getTime();\n    })\n  }\n  \n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as {[key: string]: Activity[]})\n    )\n  }\n  \n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(a => a.username === user.username);\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  }\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  }\n  \n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      })\n    }\n    \n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n        break;\n    }\n  }\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  }\n  \n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }\n  \n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach(activity => {\n        this.setActivity(activity);\n      })\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  }\n  \n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        })\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  }\n  \n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {...this.getActivity(activity.id), ...activity};\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n  \n  updateAttendance = async () => {\n      const user = store.userStore.user;\n      this.loading = true;\n      try {\n        await agent.Activities.attend(this.selectedActivity!.id);\n        runInAction(() => {\n          if (this.selectedActivity?.isGoing) {\n            this.selectedActivity.attendees = \n              this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n            this.selectedActivity.isGoing = false;\n          } else {\n            const attendee = new Profile(user!);\n            this.selectedActivity?.attendees?.push(attendee);\n            this.selectedActivity!.isGoing = true;\n          }\n          this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n        })\n      } catch (e) {\n        console.log(e);\n      } finally {\n        runInAction(() => {\n          this.loading = false;\n        })\n      }\n  }\n  \n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCanceled = !this.selectedActivity?.isCanceled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (e) {\n      console.log(e);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n  \n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n  \n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n      activity.attendees.forEach(attendee => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n}","import {User, UserFormValues} from \"../models/user\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\nimport {history} from \"../../index\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n  refreshTokenTimeout: any; \n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  get isLoggedIn() {\n    return !!this.user;\n  }\n  \n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n  \n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  }\n  \n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      this.startRefreshTokenTimer(user);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n  register = async (creds: UserFormValues) => {\n    try {\n      await agent.Account.register(creds);\n      history.push(`/account/registerSuccess?email=${creds.email}`);\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n  \n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  }\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n  \n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    })\n  }\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken).then(user => {\n        store.commonStore.setToken(user.token);\n        this.startRefreshTokenTimer(user);\n        runInAction(() => {\n          this.user = user;\n          this.fbLoading = false;\n        })\n        history.push('/activities');\n      }).catch(e => {\n        console.log(e);\n        runInAction(() =>this.fbLoading = false);\n      })\n    }\n    \n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(response => {\n        apiLogin(response.authResponse.accessToken);\n      }, {scope: 'public_profile,email'})\n    }\n  }\n  \n  refreshToken = async () => {\n    this.stopRefreshTokenTimer();\n    try {\n      const user = await agent.Account.refreshToken();\n      runInAction(() => this.user = user);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n  private startRefreshTokenTimer(user: User) {\n    const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n  }\n\n  private stopRefreshTokenTimer() { \n    clearTimeout(this.refreshTokenTimeout);\n  }\n}","import {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n  \n  constructor() {\n    makeAutoObservable(this);\n    \n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'following';\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    )\n  }\n  \n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  }\n  \n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username\n    }\n    return false;\n  }\n  \n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loadingProfile = false);\n    }\n  }\n  \n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.uploading = false);\n    }\n  }\n  \n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n          this.loading = false;\n        }\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = {...this.profile, ...profile as Profile};\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n  \n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach(profile => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        })\n        this.loading = false;\n      });\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n  \n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile?.username!, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loadingFollowings = false);\n    }\n  }\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingActivities = false);\n    }\n  }\n}","import ActivityStore from \"./activityStore\";\nimport {createContext, useContext} from \"react\";\nimport CommonStore from \"./commonStore\";\nimport UserStore from \"./userStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport CommentStore from \"./commentStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore,\n  profileStore: ProfileStore,\n  commentStore: CommentStore\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}","import {ServerError} from \"../models/serverError\";\nimport {makeAutoObservable, reaction} from \"mobx\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n  \n  constructor() {\n    makeAutoObservable(this);\n    \n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token)\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n  \n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n  \n  setToken = (token: string | null) => {\n    this.token = token;\n  }\n  \n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}","import {makeAutoObservable} from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n  \n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import {ChatComment} from \"../models/comments\";\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport {store} from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n      \n      this.hubConnection.start()\n        .catch(e => console.log('Error establishing the connection: ', e));\n      \n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          })\n          this.comments = comments;\n        }); \n      })\n      \n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      })\n    }\n  }\n  \n  stopHubConnection = () => {\n    this.hubConnection?.stop()\n      .catch(e => console.log('Error stopping connection: ', e));\n  }\n  \n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n  \n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    }catch (e) {\n      console.log(e);\n    }\n  }\n}","import React from \"react\";\nimport {Button, Container, Dropdown, Image, Menu} from \"semantic-ui-react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function NavBar() {\n  const {userStore: {user, logout, isLoggedIn}} = useStore();\n  \n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item as={NavLink} to='/' exact header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\n          Reacivities\n        </Menu.Item>\n        {isLoggedIn ?\n        <>\n          <Menu.Item as={NavLink} to='/activities' name='Activities'/>\n          <Menu.Item as={NavLink} to='/errors' name='Errors'/>\n          <Menu.Item>\n            <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\n          </Menu.Item>\n          <Menu.Item position='right'>\n            <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n            <Dropdown pointing='top left' text={user?.displayName}>\n              <Dropdown.Menu>\n                <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        </> : null}\n      </Container>\n    </Menu>\n  )\n})","import React, {SyntheticEvent} from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Reveal} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({profile}: Props) {\n  const {profileStore, userStore} = useStore();\n  const {updateFollowing, loading} = profileStore;\n  \n  if (userStore.user?.username === profile.username) return null;\n  \n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n  \n  return (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{width: '100%'}}>\n        <Button \n          fluid \n          color='teal' \n          content={profile.following ? 'Following' : 'Not following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{width: '100%'}}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  )\n})","import React from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Card, Icon, Image} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\n    }\n  }\n\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Image, List, Popup} from \"semantic-ui-react\";\nimport {Profile} from \"../../../app/models/profile\";\nimport {Link} from \"react-router-dom\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 3\n  }\n  \n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image \n                size='mini' \n                circular \n                src={attendee.image || '/assets/user.png'} \n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} /> \n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  )\n})","import React from \"react\";\nimport {Button, Icon, Item, Label, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity\n}\n\nexport default function ActivityListItem({activity}: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCanceled ?\n          <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\n        : null}\n        <Item.Group>\n          <Item>\n            <Item.Image \n              style={{marginBottom: 3}} \n              size='tiny' \n              circular \n              src={activity.host?.image || '/assets/user.png'}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\n              </Item.Description>\n              {activity.isHost ? \n                <Item.Description>\n                  <Label basic color='orange'>\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              : null}\n              {activity.isGoing && !activity.isHost ?\n                <Item.Description>\n                  <Label basic color='green'>\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n                : null}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name='marker'/> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button \n          as={Link}\n          to={`/activities/${activity.id}`}\n          color='teal'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  )\n}","import React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityListItem from \"./ActivityListItem\";\nimport { Fragment } from \"react\";\n\nexport default observer(function ActivityList() {\n  const {activityStore} = useStore();\n  const {groupedActivities} = activityStore;\n  \n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  )\n})","import React from \"react\";\nimport {Header, Menu} from \"semantic-ui-react\";\nimport Calendar from \"react-calendar\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {activityStore: {predicate, setPredicate}} = useStore();\n  \n  return (\n    <>\n      <Menu vertical size='large' style={{width: '100%', marginTop: 28}}>\n        <Header icon='filter' attached color='teal' content='Filters'/>\n        <Menu.Item \n          content='All Activities'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n        <Menu.Item \n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item \n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar \n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </>\n  )\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};\n","import React, {useEffect, useState} from \"react\";\nimport {Grid, Loader} from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport {PagingParams} from \"../../../app/models/pagination\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard () {\n  const {activityStore} = useStore();\n  const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n  \n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n  \n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n          pageStart={0}\n          loadMore={handleGetNext}\n          hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n          initialLoad={false}\n          >\n          <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  )\n})","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  type?: string,\n  label?: string\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  \n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import {ErrorMessage, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Header, Label} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function LoginForm() {\n  const {userStore} = useStore();\n  \n  return (\n    <Formik\n      initialValues={{email: '', password: '', error: null}}\n\n      onSubmit={(values, {setErrors}) => \n        userStore.login(values).catch((error) => \n          setErrors({error: error.response.data}))\n      }\n    >\n      {({handleSubmit, isSubmitting, errors}) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput placeholder='Email' name='email' />\n          <MyTextInput placeholder='Password' name='password' type='password' />\n          <ErrorMessage \n            name='error'\n            render={() => <Label style={{marginBottom: 10}} basic pointing color='red' content={errors.error}/>}\n          />\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n        </Form>\n        )}\n    </Formik>\n  )\n})","import React from \"react\";\nimport {Message} from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n  return (\n    <Message error>\n      {errors ? (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>\n              {err}\n            </Message.Item>\n          ))}\n        </Message.List>\n      ) : null}\n    </Message>\n  )\n}","import {ErrorMessage, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport * as Yup from 'yup';\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const {userStore} = useStore();\n\n  return (\n    <Formik\n      initialValues={{displayName: '',username: '',  email: '', password: '', error: null}}\n\n      onSubmit={(values, {setErrors}) =>\n        userStore.register(values).catch(error =>\n          setErrors({error}))\n      }\n      \n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput placeholder='Display Name' name='displayName' />\n          <MyTextInput placeholder='Username' name='username' />\n          <MyTextInput placeholder='Email' name='email' />\n          <MyTextInput placeholder='Password' name='password' type='password' />\n          <ErrorMessage\n            name='error'\n            render={() => <ValidationErrors  errors={errors.error}/>}\n          />\n          <Button \n            disabled={!isValid || !dirty || isSubmitting} \n            loading={isSubmitting} \n            positive \n            content='Register' \n            type='submit' \n            fluid \n          />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button, Container, Divider, Header, Image, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const {userStore, modalStore} = useStore();\n  \n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image \n            size='massive' \n            src='/assets/logo.png' \n            alt='logo'\n            style={{marginBottom: 12}}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as='h2' inverted content='Welcome to Reactivities' />\n            <Button as={Link} to='/activities' size='huge' inverted >\n              Go to Activities!\n            </Button>\n          </>\n          \n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted >\n              Login!\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted >\n              Register!\n            </Button>\n            <Divider horizontal inverted>Or</Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size='huge'\n              inverted\n              color='facebook'\n              content='Login with Facebook'\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  )\n})","import React from \"react\";\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  )\n}","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  rows: number,\n  label?: string\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label, Select} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  options: any,\n  label?: string\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select \n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","export const categoryOptions = [\n  {text: 'Drinks', value: 'drinks'},\n  {text: 'Culture', value: 'culture'},\n  {text: 'Film', value: 'film'},\n  {text: 'Food', value: 'food'},\n  {text: 'Music', value: 'music'},\n  {text: 'Travel', value: 'travel'},\n]","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\nimport DatePicker, {ReactDatePickerProps} from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={value => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {v4 as uuid} from 'uuid';\nimport {Formik, Form} from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport {ActivityFormValues} from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const {activityStore} = useStore();\n  const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\n  const {id} = useParams<{id: string}>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n  \n  const validationSchema = Yup.object({\n    title: Yup.string().required('The activity title is required'),\n    description: Yup.string().required('The activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  })\n  \n  useEffect(() => {\n    if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity])\n  \n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n    }\n  }\n  \n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />\n  \n  return (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik \n        validationSchema={validationSchema}\n        enableReinitialize \n        initialValues={activity} \n        onSubmit={values => handleFormSubmit(values)}>\n        {({handleSubmit, isValid, isSubmitting, dirty}) => (\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n            <MyTextInput placeholder='Title' name='title' />\n            <MyTextArea placeholder='Description' name='description'  rows={3}/>\n            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\n            <MyDateInput \n              placeholderText='Date' \n              name='date'  \n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <Header content='Location Details' sub color='teal' />\n            <MyTextInput placeholder='City' name='city' />\n            <MyTextInput placeholder='Venue' name='venue' />\n            <Button \n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting} \n              floated='right' \n              positive \n              type='submit' \n              content='Submit'\n            />\n            <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'/>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\nimport {useStore} from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n  const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n  \n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{padding: '0'}}>\n        {activity.isCanceled ?\n          <Label \n            style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} \n            ribbon \n            color='red' \n            content='Cancelled'\n          />\n        : null}\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{color: 'white'}}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCanceled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={activity.isCanceled ? 'Re-activate Activity' : 'Cancel Activity'}\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button \n              as={Link} \n              to={`/manage/${activity.id}`} \n              color='orange' \n              floated='right'\n              disabled={activity.isCanceled}\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n        ) : (\n          <Button loading={loading} onClick={updateAttendance} color='teal' disabled={activity.isCanceled}>\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info'/>\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal'/>\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal'/>\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>{activity.venue}, {activity.city}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  )\n})","import { observer } from 'mobx-react-lite'\nimport React, {useEffect} from 'react'\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\nimport {useStore} from '../../../app/stores/store';\nimport {Link} from 'react-router-dom';\nimport {Formik, Form, Field, FieldProps} from 'formik';\nimport * as Yup from 'yup';\nimport {formatDistanceToNow} from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n  const {commentStore} = useStore();\n  \n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    }\n  }, [commentStore, activityId])\n  \n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{border: 'none'}}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, {resetForm}) =>\n            commentStore.addComment(values).then(() => resetForm())}\n          initialValues={{body: ''}}\n          validationSchema={Yup.object({\n            body: Yup.string().required()\n          })}\n        >\n          {({isSubmitting, isValid, handleSubmit}) => (\n            <Form className='ui form'>\n              <Field name='body'>\n                {(props: FieldProps) => (\n                  <div style={{position: 'relative'}}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder='Enter your comment (\"Enter\" to submit, \"Shift+Enter\" for new line)'\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={e => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        \n        <Comment.Group>\n          {commentStore.comments.map(comment => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'}/>\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n\n  )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport {Activity} from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map(attendee => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username ?\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'\n                >\n                  Host\n                </Label>\n              : null}\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following ? \n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra> : null}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  )\n})","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {useParams} from \"react-router-dom\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function ActivityDetails() {\n  const {activityStore} = useStore();\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\n  const {id} = useParams<{id: string}>();\n  \n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity])\n\n  if (loadingInitial || !activity) return <LoadingComponent content='Loading app'/>;\n  \n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  )\n})","import React, {useState} from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as='h1' content='Test Error component' />\n      <Segment>\n        <Button.Group widths='7'>\n          <Button onClick={handleNotFound} content='Not Found' basic primary />\n          <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n          <Button onClick={handleValidationError} content='Validation Error' basic primary />\n          <Button onClick={handleServerError} content='Server Error' basic primary />\n          <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n          <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n        </Button.Group>\n      </Segment>\n      {errors ? <ValidationErrors errors={errors} /> : null}\n    </>\n  )\n}","import React from \"react\";\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - we've looked everewere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  )\n}","import React from \"react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Container, Header, Segment} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default  observer(function ServeError() {\n  const {commonStore} = useStore();\n  return (\n    <Container>\n      <Header as='h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n      {commonStore.error?.details ?\n        <Segment>\n          <Header as='h4' content='Stack trace' color='teal' />\n          <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n        </Segment> : null}\n    </Container>\n  )\n})","import React from \"react\";\nimport {useStore} from \"../../stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Modal} from \"semantic-ui-react\";\n\nexport default observer(function ModalContainer() {\n  const {modalStore} = useStore();\n  \n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  )\n})","import React from \"react\";\nimport {Divider, Grid, Header, Item, Segment, Statistic} from \"semantic-ui-react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width='12'>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width='4'>\n          <Statistic.Group widths='2'>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n})","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {Header, Icon} from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n  \n  const dzActive = {\n    borderColor: 'green'\n  }\n  \n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop Image Here' /> \n    </div>\n  )\n}","import React  from \"react\";\nimport {Cropper} from \"react-cropper\";\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({setCropper, imagePreview}: Props) {\n  return (\n    <Cropper \n      src={imagePreview}\n      style={{height: 200, width: '100%'}}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={cropper =>  setCropper(cropper)}\n    />\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {Button, Grid, Header} from \"semantic-ui-react\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\n\ninterface Props {\n  uploadPhoto: (file: Blob) => void;\n  loading: boolean;\n}\n\nexport default function PhotoUploadWidget({uploadPhoto, loading}: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n  \n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n  \n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n    }\n  }, [files])\n  \n  return (\n    <Grid>\n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 1 - Add Photo' /> \n        <PhotoWidgetDropzone setFiles={setFiles}/>\n      </Grid.Column>\n      <Grid.Column width='1'/> \n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 2 - Resize Image' />\n        {files && files.length > 0 ? (\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        ) : null}\n      </Grid.Column>\n      <Grid.Column width='1'/>\n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 3 - Preview & Upload' />\n        {files && files.length > 0 ?\n          <>\n            <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n            <Button.Group widths='2'>\n              <Button loading={loading} onClick={onCrop} positive icon='check' />\n              <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n            </Button.Group>\n          </>\n        : null}\n      </Grid.Column>\n    </Grid>\n  )\n}","import React, {SyntheticEvent, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Card, Grid, Header, Image, Tab} from \"semantic-ui-react\";\nimport {Photo, Profile} from \"../../app/models/profile\";\nimport {useStore} from \"../../app/stores/store\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilesPhotos({profile}: Props) {\n  const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n  \n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n  \n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n  \n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='image' content='Photos'/>\n          {isCurrentUser ? \n            (<Button \n              floated='right' \n              basic \n              content={addPhotoMode ? 'Cancel' : 'Add Photo '}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />) \n            : null}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {addPhotoMode ? (<PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />) : \n            (\n              <Card.Group itemsPerRow='5'>\n                {profile.photos?.map(photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url}/>\n                    {isCurrentUser ? (\n                      <Button.Group fluid widths='2'>\n                        <Button\n                          basic\n                          color='green'\n                          content='Main'\n                          name={'main' + photo.id}\n                          disabled={photo.isMain}\n                          loading={target === 'main' + photo.id && loading}\n                          onClick={e => handleSetMainPhoto(photo, e)}\n                        />\n                        <Button\n                          basic\n                          color='red'\n                          icon='trash'\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          loading={target === photo.id && loading}\n                          onClick={e => handleDeletePhoto(photo, e)}\n                        />\n                      </Button.Group>\n                    ) : null}\n                  </Card>\n                ))}\n              </Card.Group>\n            )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Form, Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport {Button} from \"semantic-ui-react\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n  const {profileStore: {profile, updateProfile}} = useStore();\n\n\n  return (\n   <Formik\n     initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\n     onSubmit={values => {updateProfile(values).then(() => {\n         setEditMode(false);\n       })\n     }}\n     validationSchema={Yup.object({\n       displayName: Yup.string().required()\n     })}\n   >\n     {({isSubmitting, isValid, dirty}) => (\n       <Form className='ui form'>\n         <MyTextInput placeholder='Display Name' name='displayName' />\n         <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n          <Button \n            positive\n            type='submit'\n            loading={isSubmitting}\n            content='Update profile'\n            floated='right'\n            disabled={!isValid || !dirty}\n          />\n       </Form>\n     )}\n   </Formik> \n  )\n})","import React, {useState} from 'react';\nimport {useStore} from \"../../app/stores/store\";\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileAbout() {\n  const {profileStore} = useStore();\n  const {isCurrentUser, profile} = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n          {isCurrentUser ? (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          ) : null}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> \n            : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Card, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const {profileStore} = useStore();\n  const {profile, followings, loadingFollowings, activeTab} = profileStore;\n  \n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header \n            floated='left' \n            icon='user' \n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} \n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React, { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } }\n];\n\nexport default observer(function ProfileActivities() {\n  const {profileStore} = useStore();\n  const {loadUserActivities, profile, loadingActivities, userActivities} = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(profile!.username, panes[data.activeIndex as\n      number].pane.key);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n              <Image \n                src={`/assets/categoryImages/${activity.category}.jpg`}\n                style={{ minHeight: 100, objectFit: 'cover' }}\n              />\n              <Card.Content>\n                <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                <Card.Meta textAlign='center'>\n                  <div>{format(new Date(activity.date), 'do LLL')}</div>\n                  <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                </Card.Meta>\n              </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});\n","import React from \"react\";\nimport {Tab} from \"semantic-ui-react\";\nimport ProfilesPhotos from \"./ProfilePhotos\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport {useStore} from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n  const {profileStore} = useStore();\n  \n  const panes = [\n    {menuItem: 'About', render: () => <ProfileAbout />},\n    {menuItem: 'Photos', render: () => <ProfilesPhotos profile={profile} />},\n    {menuItem: 'Events', render: () => <ProfileActivities />},\n    {menuItem: 'Followers', render: () => <ProfileFollowings />},\n    {menuItem: 'Following', render: () => <ProfileFollowings />}\n  ];\n  \n  return (\n    <Tab \n      menu={{fluid: true, vertical: true}}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  )\n})","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\nimport {observer} from \"mobx-react-lite\";\nimport {useParams} from \"react-router-dom\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nexport default observer(function ProfilePage() {\n  const {username} = useParams<{username: string}>();\n  const {profileStore} = useStore();\n  const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\n  \n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [loadProfile, username, setActiveTab])\n  \n  if (loadingProfile) return <LoadingComponent content='Loading profile...' /> \n  \n  return (\n    <Grid>\n      <Grid.Column width='16'>\n        {profile ? \n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile}/>\n          </>\n          : null}\n      </Grid.Column>\n    </Grid>\n  )\n})","import React from \"react\";\nimport {Redirect, Route, RouteComponentProps, RouteProps} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\n\ninterface Props extends RouteProps{\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n  const {userStore: {isLoggedIn}} = useStore();\n  \n  return (\n    <Route \n      {...rest}\n      render={(props => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />)}\n    />\n  )\n}","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n} ","import React from \"react\";\nimport useQuery from \"../../app/common/utils/hooks\";\nimport agent from \"../../app/api/agent\";\nimport { toast } from \"react-toastify\";\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\n\nexport default function RegisterSuccess() {\n  const email = useQuery().get('email') as string;\n  \n  function handleConfirmEmailResend() {\n    agent.Account.resendEmailConfirm(email).then(() => {\n      toast.success('Verification email resent - please check your email');\n    }).catch(error => console.log(error));\n  }\n  \n  return (\n    <Segment placeholder textAlign='center'>\n      <Header icon color='green'>\n        <Icon name='check' />\n        Successfully registered!\n      </Header>\n      <p>Please check your email (including junk email) for the verification email</p>\n      {email ?\n        <>\n          <p>Didn't receive the email? Click the below button to resend</p>\n          <Button primary onClick={handleConfirmEmailResend} content='Resend email' size='huge' />\n        </> : null}\n    </Segment>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {useStore} from \"../../app/stores/store\";\nimport useQuery from \"../../app/common/utils/hooks\";\nimport agent from \"../../app/api/agent\";\nimport {toast} from \"react-toastify\";\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function ConfirmEmail() {\n  const {modalStore} = useStore();\n  const email = useQuery().get('email') as string;\n  const token = useQuery().get('token') as string;\n  \n  const Status = {\n    Verifying: 'Verifying',\n    Failed: 'Failed',\n    Success: 'Success'\n  }\n  \n  const [status, setStatus] = useState(Status.Verifying);\n\n  function handleConfirmEmailResend() {\n    agent.Account.resendEmailConfirm(email).then(() => {\n      toast.success('Verification email resent - please check your email');\n    }).catch(error => console.log(error));\n  }\n  \n  useEffect(() => {\n    agent.Account.verifyEmail(token, email).then(() => {\n      setStatus(Status.Success);\n    }).catch(() => {\n      setStatus(Status.Failed);\n    })\n  }, [Status.Failed, Status.Success, token, email]);\n  \n  function getBody() {\n    switch (status) {\n      case Status.Verifying:\n        return <p>Verifying...</p>;\n      case Status.Failed:\n        return (\n          <div>\n            <p>Verification failed. You can try resending the verify link to your email</p>\n            <Button primary onClick={handleConfirmEmailResend} size='huge' content='Resend email' />\n          </div>\n        );\n      case Status.Success:\n        return (\n          <div>\n            <p>Email has been virified - you can now login</p>\n            <Button primary onClick={() => modalStore.openModal(<LoginForm />)} size='huge' content='Login' />\n          </div>\n        );\n    }\n  }\n\n  return (\n    <Segment placeholder textAlign='center'>\n      <Header>\n        <Icon name='envelope' />\n        Email verification\n      </Header>\n      <Segment.Inline>\n        {getBody()}\n      </Segment.Inline>\n    </Segment>\n  )\n}","import React, {useEffect} from 'react';\nimport './styles.css';\nimport {Container} from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from '../../features/errors/TestErrors';\nimport {ToastContainer} from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport {useStore} from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n  \n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore])\n  \n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n  \n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage}/>\n      <Route \n        path={'/(.+)'} \n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard}/>\n                <PrivateRoute path='/activities/:id' component={ActivityDetails}/>\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm}/>\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/account/registerSuccess' component={RegisterSuccess} />\n                <Route path='/account/verifyEmail' component={ConfirmEmail} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.min.css';\nimport App from './app/layout/App';\nimport {store, StoreContext} from './app/stores/store';\nimport reportWebVitals from './reportWebVitals';\nimport {Router} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n <StoreContext.Provider value={store}>\n   <Router history={history}>\n     <ScrollToTop />\n     <App />\n   </Router>\n </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}