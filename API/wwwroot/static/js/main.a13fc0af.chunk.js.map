{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setActivity","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","getActivity","setPredicate","value","resetPredicate","forEach","setLoadingInitial","state","setPagination","setPagingParams","loadActivities","axiosParams","result","console","log","loadActivity","runInAction","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCanceled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","URLSearchParams","toString","toISOString","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","setDisplayName","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","e","scope","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","Statistic","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a13fc0af.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCanceled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n  \n  \n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.description;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n  \n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n  \n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import axios, {AxiosError, AxiosResponse} from \"axios\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport {toast} from \"react-toastify\";\nimport {history} from \"../../index\";\nimport {store} from \"../stores/store\";\nimport {User, UserFormValues} from \"../models/user\";\nimport {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {PaginatedResult} from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n})\n\naxios.interceptors.response.use(async (response) => {\n  if (process.env.NODE_ENV === 'development') await sleep(1000);\n  \n  const pagination = response.headers['pagination'];\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>;\n  }\n  return response;\n}, (error: AxiosError) => {\n  const {data, status, config} = error.response!;\n  switch (status) {\n    case 400:\n      if (typeof data === 'string') {\n        toast.error(data);\n      }\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n        history.push('/not-found');\n      }\n      if (data.errors) {\n        const modalStateErrors = [];\n        for (const key in data.errors) {\n          if (data.errors[key]) {\n            modalStateErrors.push(data.errors[key]);\n          }\n        }\n        throw modalStateErrors.flat();\n      }\n      break;\n    case 401:\n      toast.error('unauthorised');\n      break;\n    case 404:\n      history.push('/not-found')\n      break;\n    case 500:\n      store.commonStore.setServerError(data);\n      history.push('/server-error');\n      break;\n  }\n  return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params})\n    .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n  current: () => requests.get<User>('/account'),\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n  fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\n}\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: {'Content-type': 'multipart/form-data'}\n    })\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => requests.put('/profiles', profile),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) => \n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) => \n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n}\n\nexport default agent;","import {User} from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}","import {makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport {format} from \"date-fns\";\nimport {store} from \"./store\";\nimport {Profile} from \"../models/profile\";\nimport {Pagination, PagingParams} from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n  \n  constructor() {\n    makeAutoObservable(this)\n    \n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n  \n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) => {\n      return a.date!.getTime() - b.date!.getTime();\n    })\n  }\n  \n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as {[key: string]: Activity[]})\n    )\n  }\n  \n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(a => a.username === user.username);\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  }\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  }\n  \n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      })\n    }\n    \n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n        break;\n    }\n  }\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  }\n  \n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }\n  \n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach(activity => {\n        this.setActivity(activity);\n      })\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  }\n  \n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        })\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  }\n  \n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {...this.getActivity(activity.id), ...activity};\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n  \n  updateAttendance = async () => {\n      const user = store.userStore.user;\n      this.loading = true;\n      try {\n        await agent.Activities.attend(this.selectedActivity!.id);\n        runInAction(() => {\n          if (this.selectedActivity?.isGoing) {\n            this.selectedActivity.attendees = \n              this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n            this.selectedActivity.isGoing = false;\n          } else {\n            const attendee = new Profile(user!);\n            this.selectedActivity?.attendees?.push(attendee);\n            this.selectedActivity!.isGoing = true;\n          }\n          this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n        })\n      } catch (e) {\n        console.log(e);\n      } finally {\n        runInAction(() => {\n          this.loading = false;\n        })\n      }\n  }\n  \n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCanceled = !this.selectedActivity?.isCanceled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (e) {\n      console.log(e);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n  \n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n  \n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n      activity.attendees.forEach(attendee => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n}","import {User, UserFormValues} from \"../models/user\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\nimport {history} from \"../../index\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  get isLoggedIn() {\n    return !!this.user;\n  }\n  \n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n  \n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  }\n  \n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => this.user = user);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n  \n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  }\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n  \n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    })\n  }\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken).then(user => {\n        store.commonStore.setToken(user.token);\n        runInAction(() => {\n          this.user = user;\n          this.fbLoading = false;\n        })\n        history.push('/activities');\n      }).catch(e => {\n        console.log(e);\n        runInAction(() =>this.fbLoading = false);\n      })\n    }\n    \n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(response => {\n        apiLogin(response.authResponse.accessToken);\n      }, {scope: 'public_profile,email'})\n    }\n  }\n}","import {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n  \n  constructor() {\n    makeAutoObservable(this);\n    \n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'following';\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    )\n  }\n  \n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  }\n  \n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username\n    }\n    return false;\n  }\n  \n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loadingProfile = false);\n    }\n  }\n  \n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.uploading = false);\n    }\n  }\n  \n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n          this.loading = false;\n        }\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = {...this.profile, ...profile as Profile};\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n  \n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach(profile => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        })\n        this.loading = false;\n      });\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loading = false);\n    }\n  }\n  \n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile?.username!, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      })\n    } catch (e) {\n      console.log(e);\n      runInAction(() => this.loadingFollowings = false);\n    }\n  }\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingActivities = false);\n    }\n  }\n}","import ActivityStore from \"./activityStore\";\nimport {createContext, useContext} from \"react\";\nimport CommonStore from \"./commonStore\";\nimport UserStore from \"./userStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport CommentStore from \"./commentStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore,\n  profileStore: ProfileStore,\n  commentStore: CommentStore\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}","import {ServerError} from \"../models/serverError\";\nimport {makeAutoObservable, reaction} from \"mobx\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n  \n  constructor() {\n    makeAutoObservable(this);\n    \n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token)\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n  \n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n  \n  setToken = (token: string | null) => {\n    this.token = token;\n  }\n  \n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}","import {makeAutoObservable} from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n  \n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import {ChatComment} from \"../models/comments\";\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport {store} from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n  \n  constructor() {\n    makeAutoObservable(this);\n  }\n  \n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n      \n      this.hubConnection.start()\n        .catch(e => console.log('Error establishing the connection: ', e));\n      \n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          })\n          this.comments = comments;\n        }); \n      })\n      \n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      })\n    }\n  }\n  \n  stopHubConnection = () => {\n    this.hubConnection?.stop()\n      .catch(e => console.log('Error stopping connection: ', e));\n  }\n  \n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n  \n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    }catch (e) {\n      console.log(e);\n    }\n  }\n}","import React from \"react\";\nimport {Button, Container, Dropdown, Image, Menu} from \"semantic-ui-react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function NavBar() {\n  const {userStore: {user, logout}} = useStore();\n  \n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item as={NavLink} to='/' exact header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\n          Reacivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to='/activities' name='Activities'/>\n        <Menu.Item as={NavLink} to='/errors' name='Errors'/>\n        <Menu.Item>\n          <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n})","import React, {SyntheticEvent} from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Reveal} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({profile}: Props) {\n  const {profileStore, userStore} = useStore();\n  const {updateFollowing, loading} = profileStore;\n  \n  if (userStore.user?.username === profile.username) return null;\n  \n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n  \n  return (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{width: '100%'}}>\n        <Button \n          fluid \n          color='teal' \n          content={profile.following ? 'Following' : 'Not following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{width: '100%'}}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  )\n})","import React from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Card, Icon, Image} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\n    }\n  }\n\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Image, List, Popup} from \"semantic-ui-react\";\nimport {Profile} from \"../../../app/models/profile\";\nimport {Link} from \"react-router-dom\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 3\n  }\n  \n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image \n                size='mini' \n                circular \n                src={attendee.image || '/assets/user.png'} \n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} /> \n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  )\n})","import React from \"react\";\nimport {Button, Icon, Item, Label, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity\n}\n\nexport default function ActivityListItem({activity}: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCanceled ?\n          <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\n        : null}\n        <Item.Group>\n          <Item>\n            <Item.Image \n              style={{marginBottom: 3}} \n              size='tiny' \n              circular \n              src={activity.host?.image || '/assets/user.png'}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\n              </Item.Description>\n              {activity.isHost ? \n                <Item.Description>\n                  <Label basic color='orange'>\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              : null}\n              {activity.isGoing && !activity.isHost ?\n                <Item.Description>\n                  <Label basic color='green'>\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n                : null}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name='marker'/> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button \n          as={Link}\n          to={`/activities/${activity.id}`}\n          color='teal'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  )\n}","import React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityListItem from \"./ActivityListItem\";\nimport { Fragment } from \"react\";\n\nexport default observer(function ActivityList() {\n  const {activityStore} = useStore();\n  const {groupedActivities} = activityStore;\n  \n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  )\n})","import React from \"react\";\nimport {Header, Menu} from \"semantic-ui-react\";\nimport Calendar from \"react-calendar\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {activityStore: {predicate, setPredicate}} = useStore();\n  \n  return (\n    <>\n      <Menu vertical size='large' style={{width: '100%', marginTop: 28}}>\n        <Header icon='filter' attached color='teal' content='Filters'/>\n        <Menu.Item \n          content='All Activities'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n        <Menu.Item \n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item \n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar \n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </>\n  )\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};\n","import React, {useEffect, useState} from \"react\";\nimport {Grid, Loader} from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport {PagingParams} from \"../../../app/models/pagination\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard () {\n  const {activityStore} = useStore();\n  const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n  \n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n  \n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n          pageStart={0}\n          loadMore={handleGetNext}\n          hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n          initialLoad={false}\n          >\n          <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  )\n})","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  type?: string,\n  label?: string\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  \n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import {ErrorMessage, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Header, Label} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function LoginForm() {\n  const {userStore} = useStore();\n  \n  return (\n    <Formik\n      initialValues={{email: '', password: '', error: null}}\n\n      onSubmit={(values, {setErrors}) => \n        userStore.login(values).catch(() => \n          setErrors({error: 'Invalid email or password'}))\n      }\n    >\n      {({handleSubmit, isSubmitting, errors}) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput placeholder='Email' name='email' />\n          <MyTextInput placeholder='Password' name='password' type='password' />\n          <ErrorMessage \n            name='error'\n            render={() => <Label style={{marginBottom: 10}} basic pointing color='red' content={errors.error}/>}\n          />\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n        </Form>\n        )}\n    </Formik>\n  )\n})","import React from \"react\";\nimport {Message} from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n  return (\n    <Message error>\n      {errors ? (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>\n              {err}\n            </Message.Item>\n          ))}\n        </Message.List>\n      ) : null}\n    </Message>\n  )\n}","import {ErrorMessage, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport * as Yup from 'yup';\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const {userStore} = useStore();\n\n  return (\n    <Formik\n      initialValues={{displayName: '',username: '',  email: '', password: '', error: null}}\n\n      onSubmit={(values, {setErrors}) =>\n        userStore.register(values).catch(error =>\n          setErrors({error}))\n      }\n      \n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput placeholder='Display Name' name='displayName' />\n          <MyTextInput placeholder='Username' name='username' />\n          <MyTextInput placeholder='Email' name='email' />\n          <MyTextInput placeholder='Password' name='password' type='password' />\n          <ErrorMessage\n            name='error'\n            render={() => <ValidationErrors  errors={errors.error}/>}\n          />\n          <Button \n            disabled={!isValid || !dirty || isSubmitting} \n            loading={isSubmitting} \n            positive \n            content='Register' \n            type='submit' \n            fluid \n          />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button, Container, Divider, Header, Image, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const {userStore, modalStore} = useStore();\n  \n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image \n            size='massive' \n            src='/assets/logo.png' \n            alt='logo'\n            style={{marginBottom: 12}}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as='h2' inverted content='Welcome to Reactivities' />\n            <Button as={Link} to='/activities' size='huge' inverted >\n              Go to Activities!\n            </Button>\n          </>\n          \n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted >\n              Login!\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted >\n              Register!\n            </Button>\n            <Divider horizontal inverted>Or</Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size='huge'\n              inverted\n              color='facebook'\n              content='Login with Facebook'\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  )\n})","import React from \"react\";\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  )\n}","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  rows: number,\n  label?: string\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label, Select} from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string,\n  name: string,\n  options: any,\n  label?: string\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select \n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","export const categoryOptions = [\n  {text: 'Drinks', value: 'drinks'},\n  {text: 'Culture', value: 'culture'},\n  {text: 'Film', value: 'film'},\n  {text: 'Food', value: 'food'},\n  {text: 'Music', value: 'music'},\n  {text: 'Travel', value: 'travel'},\n]","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\nimport DatePicker, {ReactDatePickerProps} from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={value => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic pointing color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {v4 as uuid} from 'uuid';\nimport {Formik, Form} from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport {ActivityFormValues} from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const {activityStore} = useStore();\n  const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\n  const {id} = useParams<{id: string}>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n  \n  const validationSchema = Yup.object({\n    title: Yup.string().required('The activity title is required'),\n    description: Yup.string().required('The activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  })\n  \n  useEffect(() => {\n    if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity])\n  \n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n    }\n  }\n  \n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />\n  \n  return (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik \n        validationSchema={validationSchema}\n        enableReinitialize \n        initialValues={activity} \n        onSubmit={values => handleFormSubmit(values)}>\n        {({handleSubmit, isValid, isSubmitting, dirty}) => (\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n            <MyTextInput placeholder='Title' name='title' />\n            <MyTextArea placeholder='Description' name='description'  rows={3}/>\n            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\n            <MyDateInput \n              placeholderText='Date' \n              name='date'  \n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <Header content='Location Details' sub color='teal' />\n            <MyTextInput placeholder='City' name='city' />\n            <MyTextInput placeholder='Venue' name='venue' />\n            <Button \n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting} \n              floated='right' \n              positive \n              type='submit' \n              content='Submit'\n            />\n            <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'/>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\nimport {useStore} from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n  const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n  \n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{padding: '0'}}>\n        {activity.isCanceled ?\n          <Label \n            style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} \n            ribbon \n            color='red' \n            content='Cancelled'\n          />\n        : null}\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{color: 'white'}}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCanceled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={activity.isCanceled ? 'Re-activate Activity' : 'Cancel Activity'}\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button \n              as={Link} \n              to={`/manage/${activity.id}`} \n              color='orange' \n              floated='right'\n              disabled={activity.isCanceled}\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n        ) : (\n          <Button loading={loading} onClick={updateAttendance} color='teal' disabled={activity.isCanceled}>\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info'/>\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal'/>\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal'/>\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>{activity.venue}, {activity.city}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  )\n})","import { observer } from 'mobx-react-lite'\nimport React, {useEffect} from 'react'\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\nimport {useStore} from '../../../app/stores/store';\nimport {Link} from 'react-router-dom';\nimport {Formik, Form, Field, FieldProps} from 'formik';\nimport * as Yup from 'yup';\nimport {formatDistanceToNow} from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n  const {commentStore} = useStore();\n  \n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    }\n  }, [commentStore, activityId])\n  \n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{border: 'none'}}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, {resetForm}) =>\n            commentStore.addComment(values).then(() => resetForm())}\n          initialValues={{body: ''}}\n          validationSchema={Yup.object({\n            body: Yup.string().required()\n          })}\n        >\n          {({isSubmitting, isValid, handleSubmit}) => (\n            <Form className='ui form'>\n              <Field name='body'>\n                {(props: FieldProps) => (\n                  <div style={{position: 'relative'}}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder='Enter your comment (\"Enter\" to submit, \"Shift+Enter\" for new line)'\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={e => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        \n        <Comment.Group>\n          {commentStore.comments.map(comment => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'}/>\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n\n  )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport {Activity} from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map(attendee => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username ?\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'\n                >\n                  Host\n                </Label>\n              : null}\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following ? \n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra> : null}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  )\n})","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {useParams} from \"react-router-dom\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function ActivityDetails() {\n  const {activityStore} = useStore();\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\n  const {id} = useParams<{id: string}>();\n  \n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity])\n\n  if (loadingInitial || !activity) return <LoadingComponent content='Loading app'/>;\n  \n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  )\n})","import React, {useState} from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as='h1' content='Test Error component' />\n      <Segment>\n        <Button.Group widths='7'>\n          <Button onClick={handleNotFound} content='Not Found' basic primary />\n          <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n          <Button onClick={handleValidationError} content='Validation Error' basic primary />\n          <Button onClick={handleServerError} content='Server Error' basic primary />\n          <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n          <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n        </Button.Group>\n      </Segment>\n      {errors ? <ValidationErrors errors={errors} /> : null}\n    </>\n  )\n}","import React from \"react\";\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - we've looked everewere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  )\n}","import React from \"react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Container, Header, Segment} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default  observer(function ServeError() {\n  const {commonStore} = useStore();\n  return (\n    <Container>\n      <Header as='h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n      {commonStore.error?.details ?\n        <Segment>\n          <Header as='h4' content='Stack trace' color='teal' />\n          <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n        </Segment> : null}\n    </Container>\n  )\n})","import React from \"react\";\nimport {useStore} from \"../../stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Modal} from \"semantic-ui-react\";\n\nexport default observer(function ModalContainer() {\n  const {modalStore} = useStore();\n  \n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  )\n})","import React from \"react\";\nimport {Divider, Grid, Header, Item, Segment, Statistic} from \"semantic-ui-react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width='12'>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width='4'>\n          <Statistic.Group widths='2'>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n})","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {Header, Icon} from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n  \n  const dzActive = {\n    borderColor: 'green'\n  }\n  \n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop Image Here' /> \n    </div>\n  )\n}","import React  from \"react\";\nimport {Cropper} from \"react-cropper\";\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({setCropper, imagePreview}: Props) {\n  return (\n    <Cropper \n      src={imagePreview}\n      style={{height: 200, width: '100%'}}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={cropper =>  setCropper(cropper)}\n    />\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {Button, Grid, Header} from \"semantic-ui-react\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\n\ninterface Props {\n  uploadPhoto: (file: Blob) => void;\n  loading: boolean;\n}\n\nexport default function PhotoUploadWidget({uploadPhoto, loading}: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n  \n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n  \n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n    }\n  }, [files])\n  \n  return (\n    <Grid>\n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 1 - Add Photo' /> \n        <PhotoWidgetDropzone setFiles={setFiles}/>\n      </Grid.Column>\n      <Grid.Column width='1'/> \n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 2 - Resize Image' />\n        {files && files.length > 0 ? (\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        ) : null}\n      </Grid.Column>\n      <Grid.Column width='1'/>\n      <Grid.Column width='4'>\n        <Header sub color='teal' content='Step 3 - Preview & Upload' />\n        {files && files.length > 0 ?\n          <>\n            <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n            <Button.Group widths='2'>\n              <Button loading={loading} onClick={onCrop} positive icon='check' />\n              <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n            </Button.Group>\n          </>\n        : null}\n      </Grid.Column>\n    </Grid>\n  )\n}","import React, {SyntheticEvent, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Card, Grid, Header, Image, Tab} from \"semantic-ui-react\";\nimport {Photo, Profile} from \"../../app/models/profile\";\nimport {useStore} from \"../../app/stores/store\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilesPhotos({profile}: Props) {\n  const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n  \n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n  \n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n  \n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='image' content='Photos'/>\n          {isCurrentUser ? \n            (<Button \n              floated='right' \n              basic \n              content={addPhotoMode ? 'Cancel' : 'Add Photo '}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />) \n            : null}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {addPhotoMode ? (<PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />) : \n            (\n              <Card.Group itemsPerRow='5'>\n                {profile.photos?.map(photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url}/>\n                    {isCurrentUser ? (\n                      <Button.Group fluid widths='2'>\n                        <Button\n                          basic\n                          color='green'\n                          content='Main'\n                          name={'main' + photo.id}\n                          disabled={photo.isMain}\n                          loading={target === 'main' + photo.id && loading}\n                          onClick={e => handleSetMainPhoto(photo, e)}\n                        />\n                        <Button\n                          basic\n                          color='red'\n                          icon='trash'\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          loading={target === photo.id && loading}\n                          onClick={e => handleDeletePhoto(photo, e)}\n                        />\n                      </Button.Group>\n                    ) : null}\n                  </Card>\n                ))}\n              </Card.Group>\n            )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Form, Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport {Button} from \"semantic-ui-react\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n  const {profileStore: {profile, updateProfile}} = useStore();\n\n\n  return (\n   <Formik\n     initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\n     onSubmit={values => {updateProfile(values).then(() => {\n         setEditMode(false);\n       })\n     }}\n     validationSchema={Yup.object({\n       displayName: Yup.string().required()\n     })}\n   >\n     {({isSubmitting, isValid, dirty}) => (\n       <Form className='ui form'>\n         <MyTextInput placeholder='Display Name' name='displayName' />\n         <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n          <Button \n            positive\n            type='submit'\n            loading={isSubmitting}\n            content='Update profile'\n            floated='right'\n            disabled={!isValid || !dirty}\n          />\n       </Form>\n     )}\n   </Formik> \n  )\n})","import React, {useState} from 'react';\nimport {useStore} from \"../../app/stores/store\";\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileAbout() {\n  const {profileStore} = useStore();\n  const {isCurrentUser, profile} = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n          {isCurrentUser ? (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          ) : null}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> \n            : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Card, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const {profileStore} = useStore();\n  const {profile, followings, loadingFollowings, activeTab} = profileStore;\n  \n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header \n            floated='left' \n            icon='user' \n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} \n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import React, { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } }\n];\n\nexport default observer(function ProfileActivities() {\n  const {profileStore} = useStore();\n  const {loadUserActivities, profile, loadingActivities, userActivities} = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(profile!.username, panes[data.activeIndex as\n      number].pane.key);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n              <Image \n                src={`/assets/categoryImages/${activity.category}.jpg`}\n                style={{ minHeight: 100, objectFit: 'cover' }}\n              />\n              <Card.Content>\n                <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                <Card.Meta textAlign='center'>\n                  <div>{format(new Date(activity.date), 'do LLL')}</div>\n                  <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                </Card.Meta>\n              </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});\n","import React from \"react\";\nimport {Tab} from \"semantic-ui-react\";\nimport ProfilesPhotos from \"./ProfilePhotos\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport {useStore} from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n  const {profileStore} = useStore();\n  \n  const panes = [\n    {menuItem: 'About', render: () => <ProfileAbout />},\n    {menuItem: 'Photos', render: () => <ProfilesPhotos profile={profile} />},\n    {menuItem: 'Events', render: () => <ProfileActivities />},\n    {menuItem: 'Followers', render: () => <ProfileFollowings />},\n    {menuItem: 'Following', render: () => <ProfileFollowings />}\n  ];\n  \n  return (\n    <Tab \n      menu={{fluid: true, vertical: true}}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  )\n})","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\nimport {observer} from \"mobx-react-lite\";\nimport {useParams} from \"react-router-dom\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nexport default observer(function ProfilePage() {\n  const {username} = useParams<{username: string}>();\n  const {profileStore} = useStore();\n  const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\n  \n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [loadProfile, username, setActiveTab])\n  \n  if (loadingProfile) return <LoadingComponent content='Loading profile...' /> \n  \n  return (\n    <Grid>\n      <Grid.Column width='16'>\n        {profile ? \n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile}/>\n          </>\n          : null}\n      </Grid.Column>\n    </Grid>\n  )\n})","import React from \"react\";\nimport {Redirect, Route, RouteComponentProps, RouteProps} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\n\ninterface Props extends RouteProps{\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n  const {userStore: {isLoggedIn}} = useStore();\n  \n  return (\n    <Route \n      {...rest}\n      render={(props => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />)}\n    />\n  )\n}","import React, {useEffect} from 'react';\nimport './styles.css';\nimport {Container} from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from '../../features/errors/TestErrors';\nimport {ToastContainer} from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport {useStore} from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n  \n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore])\n  \n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n  \n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage}/>\n      <Route \n        path={'/(.+)'} \n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard}/>\n                <PrivateRoute path='/activities/:id' component={ActivityDetails}/>\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm}/>\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.min.css';\nimport App from './app/layout/App';\nimport {store, StoreContext} from './app/stores/store';\nimport reportWebVitals from './reportWebVitals';\nimport {Router} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n <StoreContext.Provider value={store}>\n   <Router history={history}>\n     <ScrollToTop />\n     <App />\n   </Router>\n </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}